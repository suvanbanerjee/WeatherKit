{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WeatherKit Documentation","text":"<p>WeatherKit is a python pacakge that provides a simple interface to get weather data without any API key or any other credentials. It is a simple and easy to use package that provides the current weather data of any location in the world. It can get weather details from address, city, country, or latitude and longitude of the location.</p> <p>Currently it Provies the following weather details for current time and forecast for 7 days: - Temperature \u2600\ufe0f - Humidity \ud83d\udca7 - Wind Speed \ud83d\udca8 - Weather Code \u26c5\ufe0f - Precipitation \u2614\ufe0f </p>"},{"location":"contribute/","title":"Contributing","text":"<p>We welcome contributions to the project. Please read the contribution guidelines before contributing.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>The easy way to get WeatherKit is from pip:</p> <pre><code>pip install weatherkit\n</code></pre>"},{"location":"getting-started/#dependencies","title":"Dependencies","text":"<p>geopy - For getting latitude and longitude of the location if the location is given in address or city format.</p>"},{"location":"getting-started/#installing-from-source","title":"Installing from source","text":"<p>Download the source code by cloning the repository or by clicking here</p> <pre><code>git clone https://github.com/suvanbanerjee/weatherkit.git\ncd weatherkit\n</code></pre> <p>Build the package using the following command:</p> <pre><code>python setup.py sdist bdist_wheel\n</code></pre> <p>Install the package using the following command:</p> <pre><code>pip install dist/*.whl\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#current-weather","title":"Current Weather","text":"<p>Current weather can be accessed by creating an object of the <code>current_weather</code> class. The object can be created by providing the city name or the latitude and longitude of the location. The object provides the following methods to get the weather details:</p>"},{"location":"usage/#sample-usage-providing-city-name","title":"Sample usage providing city name","text":"<pre><code>import weatherkit\nNYC = weatherkit.current_weather('New York')\nprint(NYC.temperature())\n# Output: 20.0\nprint(NYC.temperature(units='imperial'))\n# Output: 68.0\nprint(NYC.humidity())\n# Output: 50\nprint(NYC.weather_code())\n# Output: 3\nprint(NYC.precipitation())\n# Output: 0.0\n</code></pre>"},{"location":"usage/#sample-usage-providing-latitude-and-longitude","title":"Sample usage providing latitude and longitude","text":"<pre><code>import weatherkit\nNYC = weatherkit.current_weather(40.7128, -74.0060)\nprint(NYC.temperature())\n# Output: 20.0\nprint(NYC.temperature(units='imperial'))\n# Output: 68.0\nprint(NYC.humidity())\n# Output: 50\nprint(NYC.weather_code())\n# Output: 3\nprint(NYC.precipitation())\n# Output: 0.0\n</code></pre>"},{"location":"usage/#daily-forecast","title":"Daily Forecast","text":"<p>Daily forecast can be accessed by creating an object of the <code>daily_forecast</code> class. The object can be created by providing the city name or the latitude and longitude of the location. The object provides the following methods to get the weather details:</p> <pre><code>import weatherkit\nNYC = weatherkit.daily_forecast('New York')\nprint(NYC.max_temperature())\n# Output: 20.0\nprint(NYC.max_temperature(units='imperial'))\n# Output: 68.0\nprint(NYC.min_temperature())\n# Output: 10.0\nprint(NYC.max_temperature(day_offset=3))\n# Output: 20.0\nprint(NYC.max_temperature(day_offset=3, units='imperial'))\n# Output: 68.0\nprint(NYC.prediction_sum())\n# Output: 0.0\nprint(NYC.prediction_sum(day_offset=3))\n# Output: 3.2\nprint(NYC.prediction_sum(units='imperial'))\n# Output: 0.0 (in Inches)\nprint(NYC.weather_code())\n# Output: 3\nprint(NYC.weather_code(day_offset=3))\n# Output: 3\n</code></pre>"},{"location":"usage/#note","title":"Note","text":"<ul> <li> <p>Similar to current weather, daily forecast can also be used by providing latitude and longitude.</p> </li> <li> <p>day_offset is the number of days from today for which the forecast is required. day_offset=0 (which is default) will give the forecast for today, day_offset=1 will give the forecast for tomorrow and so on.</p> </li> </ul>"}]}